openapi: "3.0.3"
info:
  title: "Data WH"
  version: "1.0.0"
  description: "La api de un sistema de manejo de contactos"
  contact:
    name: Mariano Fernández
servers:
  - url: "http://localhost:8500/api/v1/"

paths:
  /usuarios:
    get:
      summary: "Acceso a listado de Usuarios"
      tags:
        - "Usuarios"
      parameters:
        - $ref: "#components/parameters/AccessToken"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /usuario/login:
    post:
      summary: "Login de Usuarios"
      tags:
        - "Usuarios"
      requestBody:
        description: "Nombre de usuario y password"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - nombre_usuario
                - password
              properties:
                nombre_usuario:
                  type: "string"
                  example: jperez
                password:
                  type: "string"
                  example: "12345678"
      responses:
        "200":
          description: "Login OK"
          content:
            text/plain:
              schema:
                type: string
                description: JWT Token
                example: "eYhb1NiIsGciOiJIUzII..."
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "500":
          $ref: "#components/responses/ErrorServidor"
  /usuario/crear:
    post:
      summary: "Cargar un usuario"
      tags:
        - "Usuarios"
      requestBody:
        description: "Los detalles del usuario"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - nombre_usuario
                - nombre_completo
                - email
                - password
              properties:
                nombre_completo:
                  type: "string"
                  example: "Juan Pérez"
                nombre_usuario:
                  type: "string"
                  example: "jperez"
                direcccion:
                  type: "string"
                  example: "Marcelo T. Alvear 1614 4°A"
                password:
                  type: "string"
                  example: "12345678"
                email:
                  type: "string"
                  example: juan@perez.com
      responses:
        "200":
          description: "Todo OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "500":
          $ref: "#components/responses/ErrorServidor"

  /usuario/{id_usuario}:
    put:
      summary: "Modificar Usuario por id"
      tags:
        - "Usuarios"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_usuario
          required: true
          in: path
          schema:
            type: "integer"
      requestBody:
        description: "Los detalles del usuario"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Usuario"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"
    delete:
      summary: "Borrar Usuario"
      tags:
        - "Usuarios"
      parameters:
        - $ref: "#components/parameters/AccessToken"
        - name: id_usuario
          required: true
          in: path
          schema:
            type: "integer"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#components/responses/DatosFaltantes"
        "401":
          $ref: "#components/responses/SinAcceso"
        "403":
          $ref: "#components/responses/NoAutorizado"
        "500":
          $ref: "#components/responses/ErrorServidor"


tags:
  - name: "Usuarios"
    description: "ABM de usuarios y login"



components:
  schemas:
    Usuario:
      type: "object"
      required:
        - id_usuario
        - nombre_usuario
        - nombre_completo
        - direccion
        - email
        - password
        - rol
      properties:
        id_usuario:
          type: "integer"
          readOnly: true
          example: "2"
        nombre_completo:
          type: "string"
          example: "Juan Pérez"
        nombre_usuario:
          type: "string"
          example: jperez
        direccion:
          type: "string"
          example: "Marcelo T. Alvear 1614 4°A"
        password:
          type: "string"
          example: "12345678"
        email:
          type: "string"
          example: juan@perez.com
        rol:
          type: "string"
          enum:
            - usuario
            - administrador
  responses:
    SinAcceso:
      description: El token de acceso no es válido o está vacío.
    NoAutorizado:
      description: No está autorizado a realizar la operación.
    ErrorServidor:
      description: Se produjo un error al procesar la operación, reintente.
    DatosFaltantes:
      description: Los datos enviados son incorrectos o incompletos, reintente.

  parameters:
    AccessToken:
      name: "x-access-token"
      in: header
      description: Access Token.
      required: true
      schema:
        type: string
